/*
 * DIO_Interface.h
 *
 *  Created on: Oct 21, 2023
 *      Author: Ziad
 */

#ifndef MCAL_DIO_DIO_INTERFACE_H_
#define MCAL_DIO_DIO_INTERFACE_H_

#include "../../LIB/STD_TYPES.h"


/*************************************************************************************/
/* 						USEFUL MACROS AS FUNCTIONS' ARGUMENTS   					 */
/*************************************************************************************/

/*************************************************************************************/
/* 								 	DIO PORTS   					 			     */
/*************************************************************************************/
typedef enum {
    DIO_PORTA = 0,
    DIO_PORTB,
    DIO_PORTC,
    DIO_PORTD
} DIO_Port;
/*************************************************************************************/

/*************************************************************************************/
/* 								 	DIO PINS	   					 			     */
/*************************************************************************************/
typedef enum {
    DIO_PIN0 = 0,
    DIO_PIN1,
    DIO_PIN2,
    DIO_PIN3,
    DIO_PIN4,
    DIO_PIN5,
    DIO_PIN6,
    DIO_PIN7
} DIO_Pin;
/*************************************************************************************/

/*************************************************************************************/
/* 								 DIO PINS DIRECTION					 			     */
/*************************************************************************************/
typedef enum {
    DIO_PIN_INPUT,
    DIO_PIN_OUTPUT
} DIO_PinDirectionType;
/*************************************************************************************/

/*************************************************************************************/
/* 								 DIO PORTS DIRECTION					 	         */
/*************************************************************************************/
typedef enum
{
	DIO_PORT_INPUT,
	DIO_PORT_OUTPUT=0xFF
}DIO_PortDirectionType;
/*************************************************************************************/

/*************************************************************************************/
/* 								DIO PINS VALUE					 			         */
/*************************************************************************************/
typedef enum {
    DIO_PIN_LOW = 0,
    DIO_PIN_HIGH
} DIO_PinValue;
/*************************************************************************************/

/*************************************************************************************/
/* DIO Configuration Structure */
/*************************************************************************************/
typedef struct {
    DIO_Port port;
    DIO_Pin pin;
    DIO_PinDirectionType direction;
    DIO_PinValue value;
} DIO_Config;

/*************************************************************************************/
/* 								FUNCTIONS PROTOTYPE 								 */
/*************************************************************************************/

/*************************************************************************************/
/* Description: Sets a whole port to either input or output   						 */
/* Input      : Port - Direction                                                     */
/* Output     : Error Checking                                                       */
/*************************************************************************************/
extern u8 DIO_U8SetPortDirection (const DIO_Config* config);
/*************************************************************************************/

/**************************************************************************************/
/* Description: Sets a specific pin to either input or output  						  */
/* Input      : Port - Pin - Direction                                                */
/* Output     : Error Checking  	                                                  */
/**************************************************************************************/
extern u8 DIO_U8SetPinDirection (const DIO_Config* config);
/**************************************************************************************/

/**************************************************************************************/
/* Description: Assign a certain value to a whole port 		  						  */
/* Input      : Port - Value	                                                      */
/* Output     : Error Checking                                                        */
/**************************************************************************************/
extern u8 DIO_U8SetPortValue(const DIO_Config* config);
/**************************************************************************************/

/**************************************************************************************/
/* Description: Assign either 1 or 0 to a specific pin		  						  */
/* Input      : Port - Pin - Value	                                                  */
/* Output     : Error Checking                                                        */
/**************************************************************************************/
extern u8 DIO_U8SetPinValue(const DIO_Config* config);
/**************************************************************************************/

/**************************************************************************************/
/* Description: Toggles a certain pin				 		  						  */
/* Input      : Port - Pin		                                                      */
/* Output     : Error Checking                                                        */
/**************************************************************************************/
extern u8 DIO_U8TogglePin(const DIO_Config* config);
/**************************************************************************************/

/**************************************************************************************/
/* Description: Toggles a certain port				 		  						  */
/* Input      : Port			                                                      */
/* Output     : Error Checking                                                        */
/**************************************************************************************/
extern u8 DIO_U8TogglePort(DIO_Port port);
/**************************************************************************************/

/**************************************************************************************/
/* Description: Stores the value of a certain pin in a given pointer				  */
/* Input      : Port - Pin - Pointer to value                                         */
/* Output     : Error Checking                                                        */
/**************************************************************************************/
extern u8 DIO_U8GetPinValue(const DIO_Config* config, u8* value);
/**************************************************************************************/

/**************************************************************************************/
/* Description: Stores the value of a whole port in a given pointer					  */
/* Input      : Port - Pointer to value		                                          */
/* Output     : Error Checking                                                        */
/**************************************************************************************/
extern u8 DIO_U8GetPortValue(DIO_Port port, u8* value);
/**************************************************************************************/


#endif /* MCAL_DIO_DIO_INTERFACE_H_ */
