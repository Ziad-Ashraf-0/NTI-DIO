
NTI_AVR_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000003de  00000472  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  00800068  00800068  0000047a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000047a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016f8  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3e  00000000  00000000  00001d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b1f  00000000  00000000  000028a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003fc  00000000  00000000  000033c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b81  00000000  00000000  000037c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bae  00000000  00000000  00004345  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00004ef3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 c9 00 	jmp	0x192	; 0x192 <__vector_1>
   8:	0c 94 f2 00 	jmp	0x1e4	; 0x1e4 <__vector_2>
   c:	0c 94 1b 01 	jmp	0x236	; 0x236 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 c4 01 	jmp	0x388	; 0x388 <__vector_10>
  2c:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ed       	ldi	r30, 0xDE	; 222
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e6       	ldi	r26, 0x68	; 104
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 38       	cpi	r26, 0x80	; 128
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 ed 01 	jmp	0x3da	; 0x3da <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
	DIO_Config led = {DIO_PORTA,DIO_PIN6,DIO_PIN_OUTPUT,DIO_PIN_HIGH};
	DIO_U8SetPinDirection(&led);
	DIO_U8SetPinValue(&led);
}

int main(void) {
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	28 97       	sbiw	r28, 0x08	; 8
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
	DIO_Config led = {DIO_PORTB,DIO_PIN3,DIO_PIN_OUTPUT};
  a6:	19 82       	std	Y+1, r1	; 0x01
  a8:	1a 82       	std	Y+2, r1	; 0x02
  aa:	1b 82       	std	Y+3, r1	; 0x03
  ac:	1c 82       	std	Y+4, r1	; 0x04
  ae:	11 e0       	ldi	r17, 0x01	; 1
  b0:	19 83       	std	Y+1, r17	; 0x01
  b2:	83 e0       	ldi	r24, 0x03	; 3
  b4:	8a 83       	std	Y+2, r24	; 0x02
  b6:	1b 83       	std	Y+3, r17	; 0x03
	DIO_U8SetPinDirection(&led);
  b8:	ce 01       	movw	r24, r28
  ba:	01 96       	adiw	r24, 0x01	; 1
  bc:	0e 94 8b 00 	call	0x116	; 0x116 <DIO_U8SetPinDirection>
		
	GIE_enable();
  c0:	0e 94 44 01 	call	0x288	; 0x288 <GIE_enable>
	
	Timer0_Config timerConfig = {CTC, PRESCALER_1024, OC0_TOGGLE, 250};
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	8d 83       	std	Y+5, r24	; 0x05
  c8:	85 e0       	ldi	r24, 0x05	; 5
  ca:	8e 83       	std	Y+6, r24	; 0x06
  cc:	1f 83       	std	Y+7, r17	; 0x07
  ce:	8a ef       	ldi	r24, 0xFA	; 250
  d0:	88 87       	std	Y+8, r24	; 0x08
    //M_TIMER0_void_setCallBack(timerCallback,COMPARE);
	M_TIMER0_void_Init(&timerConfig);
  d2:	ce 01       	movw	r24, r28
  d4:	05 96       	adiw	r24, 0x05	; 5
  d6:	0e 94 46 01 	call	0x28c	; 0x28c <M_TIMER0_void_Init>
	//M_TIMER0_void_IntEnable(COMPARE);
	//M_TIMER0_void_setDelayTimeMilliSec(3000);
	M_TIMER0_void_start(&timerConfig);
  da:	ce 01       	movw	r24, r28
  dc:	05 96       	adiw	r24, 0x05	; 5
  de:	0e 94 63 01 	call	0x2c6	; 0x2c6 <M_TIMER0_void_start>
  e2:	ff cf       	rjmp	.-2      	; 0xe2 <main+0x50>

000000e4 <__vector_16>:
  e4:	24 b1       	in	r18, 0x04	; 4
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	00 24       	eor	r0, r0
  ea:	22 0f       	add	r18, r18
  ec:	33 1f       	adc	r19, r19
  ee:	00 1c       	adc	r0, r0
  f0:	22 0f       	add	r18, r18
  f2:	33 1f       	adc	r19, r19
  f4:	00 1c       	adc	r0, r0
  f6:	23 2f       	mov	r18, r19
  f8:	30 2d       	mov	r19, r0
  fa:	85 b1       	in	r24, 0x05	; 5
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	88 0f       	add	r24, r24
 100:	99 1f       	adc	r25, r25
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <__data_end>
 10a:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <__data_end+0x1>
 10e:	82 2b       	or	r24, r18
 110:	93 2b       	or	r25, r19
 112:	09 95       	icall
 114:	08 95       	ret

00000116 <DIO_U8SetPinDirection>:
 116:	dc 01       	movw	r26, r24
 118:	ec 91       	ld	r30, X
 11a:	e4 30       	cpi	r30, 0x04	; 4
 11c:	a0 f5       	brcc	.+104    	; 0x186 <DIO_U8SetPinDirection+0x70>
 11e:	11 96       	adiw	r26, 0x01	; 1
 120:	2c 91       	ld	r18, X
 122:	11 97       	sbiw	r26, 0x01	; 1
 124:	28 30       	cpi	r18, 0x08	; 8
 126:	88 f5       	brcc	.+98     	; 0x18a <DIO_U8SetPinDirection+0x74>
 128:	12 96       	adiw	r26, 0x02	; 2
 12a:	8c 91       	ld	r24, X
 12c:	81 11       	cpse	r24, r1
 12e:	15 c0       	rjmp	.+42     	; 0x15a <DIO_U8SetPinDirection+0x44>
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	ee 0f       	add	r30, r30
 134:	ff 1f       	adc	r31, r31
 136:	e0 5a       	subi	r30, 0xA0	; 160
 138:	ff 4f       	sbci	r31, 0xFF	; 255
 13a:	01 90       	ld	r0, Z+
 13c:	f0 81       	ld	r31, Z
 13e:	e0 2d       	mov	r30, r0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_U8SetPinDirection+0x34>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	2a 95       	dec	r18
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_U8SetPinDirection+0x30>
 14e:	80 95       	com	r24
 150:	90 81       	ld	r25, Z
 152:	89 23       	and	r24, r25
 154:	80 83       	st	Z, r24
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	08 95       	ret
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	c1 f4       	brne	.+48     	; 0x18e <DIO_U8SetPinDirection+0x78>
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	ee 0f       	add	r30, r30
 162:	ff 1f       	adc	r31, r31
 164:	e0 5a       	subi	r30, 0xA0	; 160
 166:	ff 4f       	sbci	r31, 0xFF	; 255
 168:	01 90       	ld	r0, Z+
 16a:	f0 81       	ld	r31, Z
 16c:	e0 2d       	mov	r30, r0
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_U8SetPinDirection+0x62>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	2a 95       	dec	r18
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_U8SetPinDirection+0x5e>
 17c:	90 81       	ld	r25, Z
 17e:	89 2b       	or	r24, r25
 180:	80 83       	st	Z, r24
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	08 95       	ret
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	08 95       	ret
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	08 95       	ret
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	08 95       	ret

00000192 <__vector_1>:
 192:	1f 92       	push	r1
 194:	0f 92       	push	r0
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
 19c:	2f 93       	push	r18
 19e:	3f 93       	push	r19
 1a0:	4f 93       	push	r20
 1a2:	5f 93       	push	r21
 1a4:	6f 93       	push	r22
 1a6:	7f 93       	push	r23
 1a8:	8f 93       	push	r24
 1aa:	9f 93       	push	r25
 1ac:	af 93       	push	r26
 1ae:	bf 93       	push	r27
 1b0:	ef 93       	push	r30
 1b2:	ff 93       	push	r31
 1b4:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <Action>
 1b8:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <Action+0x1>
 1bc:	30 97       	sbiw	r30, 0x00	; 0
 1be:	09 f0       	breq	.+2      	; 0x1c2 <__vector_1+0x30>
 1c0:	09 95       	icall
 1c2:	ff 91       	pop	r31
 1c4:	ef 91       	pop	r30
 1c6:	bf 91       	pop	r27
 1c8:	af 91       	pop	r26
 1ca:	9f 91       	pop	r25
 1cc:	8f 91       	pop	r24
 1ce:	7f 91       	pop	r23
 1d0:	6f 91       	pop	r22
 1d2:	5f 91       	pop	r21
 1d4:	4f 91       	pop	r20
 1d6:	3f 91       	pop	r19
 1d8:	2f 91       	pop	r18
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <__vector_2>:
 1e4:	1f 92       	push	r1
 1e6:	0f 92       	push	r0
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	0f 92       	push	r0
 1ec:	11 24       	eor	r1, r1
 1ee:	2f 93       	push	r18
 1f0:	3f 93       	push	r19
 1f2:	4f 93       	push	r20
 1f4:	5f 93       	push	r21
 1f6:	6f 93       	push	r22
 1f8:	7f 93       	push	r23
 1fa:	8f 93       	push	r24
 1fc:	9f 93       	push	r25
 1fe:	af 93       	push	r26
 200:	bf 93       	push	r27
 202:	ef 93       	push	r30
 204:	ff 93       	push	r31
 206:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <Action+0x2>
 20a:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <Action+0x3>
 20e:	30 97       	sbiw	r30, 0x00	; 0
 210:	09 f0       	breq	.+2      	; 0x214 <__vector_2+0x30>
 212:	09 95       	icall
 214:	ff 91       	pop	r31
 216:	ef 91       	pop	r30
 218:	bf 91       	pop	r27
 21a:	af 91       	pop	r26
 21c:	9f 91       	pop	r25
 21e:	8f 91       	pop	r24
 220:	7f 91       	pop	r23
 222:	6f 91       	pop	r22
 224:	5f 91       	pop	r21
 226:	4f 91       	pop	r20
 228:	3f 91       	pop	r19
 22a:	2f 91       	pop	r18
 22c:	0f 90       	pop	r0
 22e:	0f be       	out	0x3f, r0	; 63
 230:	0f 90       	pop	r0
 232:	1f 90       	pop	r1
 234:	18 95       	reti

00000236 <__vector_3>:
 236:	1f 92       	push	r1
 238:	0f 92       	push	r0
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	0f 92       	push	r0
 23e:	11 24       	eor	r1, r1
 240:	2f 93       	push	r18
 242:	3f 93       	push	r19
 244:	4f 93       	push	r20
 246:	5f 93       	push	r21
 248:	6f 93       	push	r22
 24a:	7f 93       	push	r23
 24c:	8f 93       	push	r24
 24e:	9f 93       	push	r25
 250:	af 93       	push	r26
 252:	bf 93       	push	r27
 254:	ef 93       	push	r30
 256:	ff 93       	push	r31
 258:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <Action+0x4>
 25c:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <Action+0x5>
 260:	30 97       	sbiw	r30, 0x00	; 0
 262:	09 f0       	breq	.+2      	; 0x266 <__vector_3+0x30>
 264:	09 95       	icall
 266:	ff 91       	pop	r31
 268:	ef 91       	pop	r30
 26a:	bf 91       	pop	r27
 26c:	af 91       	pop	r26
 26e:	9f 91       	pop	r25
 270:	8f 91       	pop	r24
 272:	7f 91       	pop	r23
 274:	6f 91       	pop	r22
 276:	5f 91       	pop	r21
 278:	4f 91       	pop	r20
 27a:	3f 91       	pop	r19
 27c:	2f 91       	pop	r18
 27e:	0f 90       	pop	r0
 280:	0f be       	out	0x3f, r0	; 63
 282:	0f 90       	pop	r0
 284:	1f 90       	pop	r1
 286:	18 95       	reti

00000288 <GIE_enable>:
#include "GIE_interface.h"


// Enable Global Interrupts
void GIE_enable(){
    __asm__ __volatile__ ("sei" ::);
 288:	78 94       	sei
 28a:	08 95       	ret

0000028c <M_TIMER0_void_Init>:

void M_TIMER0_void_setCallBack(void (*ptrfn)(void),u8 copy_u8IntID){
	if(copy_u8IntID == OVERFLOW){
		Action_Timer[0] = ptrfn;
		}else if(copy_u8IntID == COMPARE){
		Action_Timer[1] = ptrfn;
 28c:	fc 01       	movw	r30, r24
 28e:	90 81       	ld	r25, Z
 290:	91 11       	cpse	r25, r1
 292:	03 c0       	rjmp	.+6      	; 0x29a <M_TIMER0_void_Init+0xe>
 294:	80 e8       	ldi	r24, 0x80	; 128
 296:	83 bf       	out	0x33, r24	; 51
 298:	08 95       	ret
 29a:	92 30       	cpi	r25, 0x02	; 2
 29c:	51 f4       	brne	.+20     	; 0x2b2 <M_TIMER0_void_Init+0x26>
 29e:	83 81       	ldd	r24, Z+3	; 0x03
 2a0:	8c bf       	out	0x3c, r24	; 60
 2a2:	82 81       	ldd	r24, Z+2	; 0x02
 2a4:	20 e1       	ldi	r18, 0x10	; 16
 2a6:	82 9f       	mul	r24, r18
 2a8:	c0 01       	movw	r24, r0
 2aa:	11 24       	eor	r1, r1
 2ac:	88 68       	ori	r24, 0x88	; 136
 2ae:	83 bf       	out	0x33, r24	; 51
 2b0:	08 95       	ret
 2b2:	93 30       	cpi	r25, 0x03	; 3
 2b4:	19 f4       	brne	.+6      	; 0x2bc <M_TIMER0_void_Init+0x30>
 2b6:	80 e8       	ldi	r24, 0x80	; 128
 2b8:	83 bf       	out	0x33, r24	; 51
 2ba:	08 95       	ret
 2bc:	91 30       	cpi	r25, 0x01	; 1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <M_TIMER0_void_Init+0x38>
 2c0:	80 e8       	ldi	r24, 0x80	; 128
 2c2:	83 bf       	out	0x33, r24	; 51
 2c4:	08 95       	ret

000002c6 <M_TIMER0_void_start>:
 2c6:	23 b7       	in	r18, 0x33	; 51
 2c8:	28 7f       	andi	r18, 0xF8	; 248
 2ca:	23 bf       	out	0x33, r18	; 51
 2cc:	fc 01       	movw	r30, r24
 2ce:	81 81       	ldd	r24, Z+1	; 0x01
 2d0:	28 2b       	or	r18, r24
 2d2:	23 bf       	out	0x33, r18	; 51
 2d4:	08 95       	ret

000002d6 <__vector_11>:
TCNT = 256 - remaining counts
counter = 0
call back();
*/

ISR(TIMER0_OVF_vect){
 2d6:	1f 92       	push	r1
 2d8:	0f 92       	push	r0
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	0f 92       	push	r0
 2de:	11 24       	eor	r1, r1
 2e0:	2f 93       	push	r18
 2e2:	3f 93       	push	r19
 2e4:	4f 93       	push	r20
 2e6:	5f 93       	push	r21
 2e8:	6f 93       	push	r22
 2ea:	7f 93       	push	r23
 2ec:	8f 93       	push	r24
 2ee:	9f 93       	push	r25
 2f0:	af 93       	push	r26
 2f2:	bf 93       	push	r27
 2f4:	ef 93       	push	r30
 2f6:	ff 93       	push	r31
	static u32 counter = 0;
	if(Action_Timer[0]!= NULL){
 2f8:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Action_Timer>
 2fc:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <Action_Timer+0x1>
 300:	89 2b       	or	r24, r25
 302:	89 f1       	breq	.+98     	; 0x366 <__vector_11+0x90>
		counter++;
 304:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <counter.1660>
 308:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <counter.1660+0x1>
 30c:	a0 91 72 00 	lds	r26, 0x0072	; 0x800072 <counter.1660+0x2>
 310:	b0 91 73 00 	lds	r27, 0x0073	; 0x800073 <counter.1660+0x3>
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	a1 1d       	adc	r26, r1
 318:	b1 1d       	adc	r27, r1
 31a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <counter.1660>
 31e:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <counter.1660+0x1>
 322:	a0 93 72 00 	sts	0x0072, r26	; 0x800072 <counter.1660+0x2>
 326:	b0 93 73 00 	sts	0x0073, r27	; 0x800073 <counter.1660+0x3>
		if(counter == numOverflows){
 32a:	40 91 7c 00 	lds	r20, 0x007C	; 0x80007c <numOverflows>
 32e:	50 91 7d 00 	lds	r21, 0x007D	; 0x80007d <numOverflows+0x1>
 332:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <numOverflows+0x2>
 336:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <numOverflows+0x3>
 33a:	84 17       	cp	r24, r20
 33c:	95 07       	cpc	r25, r21
 33e:	a6 07       	cpc	r26, r22
 340:	b7 07       	cpc	r27, r23
 342:	89 f4       	brne	.+34     	; 0x366 <__vector_11+0x90>
			TCNT0_REG = 256 - remainingCounts;
 344:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <remainingCounts>
 348:	81 95       	neg	r24
 34a:	82 bf       	out	0x32, r24	; 50
			counter = 0;
 34c:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <counter.1660>
 350:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <counter.1660+0x1>
 354:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <counter.1660+0x2>
 358:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <counter.1660+0x3>
			Action_Timer[0]();
 35c:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <Action_Timer>
 360:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <Action_Timer+0x1>
 364:	09 95       	icall
		}
		
	}
}
 366:	ff 91       	pop	r31
 368:	ef 91       	pop	r30
 36a:	bf 91       	pop	r27
 36c:	af 91       	pop	r26
 36e:	9f 91       	pop	r25
 370:	8f 91       	pop	r24
 372:	7f 91       	pop	r23
 374:	6f 91       	pop	r22
 376:	5f 91       	pop	r21
 378:	4f 91       	pop	r20
 37a:	3f 91       	pop	r19
 37c:	2f 91       	pop	r18
 37e:	0f 90       	pop	r0
 380:	0f be       	out	0x3f, r0	; 63
 382:	0f 90       	pop	r0
 384:	1f 90       	pop	r1
 386:	18 95       	reti

00000388 <__vector_10>:

ISR(TIMER0_COMP_vect){
 388:	1f 92       	push	r1
 38a:	0f 92       	push	r0
 38c:	0f b6       	in	r0, 0x3f	; 63
 38e:	0f 92       	push	r0
 390:	11 24       	eor	r1, r1
 392:	2f 93       	push	r18
 394:	3f 93       	push	r19
 396:	4f 93       	push	r20
 398:	5f 93       	push	r21
 39a:	6f 93       	push	r22
 39c:	7f 93       	push	r23
 39e:	8f 93       	push	r24
 3a0:	9f 93       	push	r25
 3a2:	af 93       	push	r26
 3a4:	bf 93       	push	r27
 3a6:	ef 93       	push	r30
 3a8:	ff 93       	push	r31

	if(Action_Timer[1]!= NULL){
 3aa:	e0 91 76 00 	lds	r30, 0x0076	; 0x800076 <Action_Timer+0x2>
 3ae:	f0 91 77 00 	lds	r31, 0x0077	; 0x800077 <Action_Timer+0x3>
 3b2:	30 97       	sbiw	r30, 0x00	; 0
 3b4:	09 f0       	breq	.+2      	; 0x3b8 <__vector_10+0x30>
			Action_Timer[1]();
 3b6:	09 95       	icall
		
	}
}
 3b8:	ff 91       	pop	r31
 3ba:	ef 91       	pop	r30
 3bc:	bf 91       	pop	r27
 3be:	af 91       	pop	r26
 3c0:	9f 91       	pop	r25
 3c2:	8f 91       	pop	r24
 3c4:	7f 91       	pop	r23
 3c6:	6f 91       	pop	r22
 3c8:	5f 91       	pop	r21
 3ca:	4f 91       	pop	r20
 3cc:	3f 91       	pop	r19
 3ce:	2f 91       	pop	r18
 3d0:	0f 90       	pop	r0
 3d2:	0f be       	out	0x3f, r0	; 63
 3d4:	0f 90       	pop	r0
 3d6:	1f 90       	pop	r1
 3d8:	18 95       	reti

000003da <_exit>:
 3da:	f8 94       	cli

000003dc <__stop_program>:
 3dc:	ff cf       	rjmp	.-2      	; 0x3dc <__stop_program>
